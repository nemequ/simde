name: CI

on: [push, pull_request]

jobs:
  formatting:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2
    - name: Trailing whitespace
      run: git diff --check HEAD^
    - name: Tabs
      run: find simde/ -name '*.c' -o -name '*.h' -exec grep -nP '\t' {} + && exit 1 || exit 0
    # s/8/16/ will result in this if the input is x86.
    - name: Bad substitutions
      run: git grep -i 'x''1''6''6' && exit 1 || exit 0
    - name: Incorrect assertions in test/
      run: grep -PR '(?<=[^a-zA-Z0-9_])simde_assert_u?int(8|16|32|64)(?>[^a-zA-Z0-9_])' test/ && exit 1 || exit 0
    - name: Executable sources
      run: find \( -name '*.c' -o -name '*.h' \) -executable | grep -q '.' && exit 1 || exit 0
    - name: Missing NEON includes
      run: for f in simde/arm/neon/*.h; do grep -q "include \"neon/$(basename "$f")\"" simde/arm/neon.h || (echo "Missing $f" && exit 1); done
    - name: Header guards
      run: for file in $(find simde/*/ -name '*.h'); do grep -q "$(echo "$file" | tr '[:lower:]' '[:upper:]' | tr '[:punct:]' '_')" "$file" || (echo "Missing or incorrect header guard in $file" && exit 1); done

  x86:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        isax: ["", "-msse3", "-mssse3", "-msse4.1", "-msse4.2", "-mavx", "-mfma", "-mavx2", "-march=native"]
    env:
      CFLAGS: -Wall -Wextra -Werror ${{ matrix.isax }}
      CXXFLAGS: -Wall -Wextra -Werror ${{ matrix.isax }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Install APT Dependencies
      run: sudo add-apt-repository 'ppa:ubuntu-toolchain-r/test' && sudo apt-get update && sudo apt-get install -y ninja-build ninja-build python3-pip python3-setuptools python3-wheel parallel gcovr
    - name: Install pip Dependencies
      run: pip3 install meson
    - name: Configure
      run: ~/.local/bin/meson setup build -Db_coverage=true
    - name: Build
      run: ninja -C build -v
    - name: Test
      run: |
        ./build/test/run-tests --list | grep -oP '^/([^\/]+)/([^\/]+)' | sort -u | xargs parallel ./build/test/run-tests --color always {} :::
    - name: Coverage Report
      run: ninja -C build -v coverage-xml
    - name: CodeCov.io
      uses: codecov/codecov-action@v1
      with:
        file: ./build/meson-logs/coverage.xml

  SDE:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: ["icelake-server"]
    env:
      CC: clang
      CXX: clang++
      CFLAGS: -march=icelake-server -Wall -Wextra -Werror
      CXXFLAGS: -march=icelake-server -Wall -Wextra -Werror
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Install APT Dependencies
      run: sudo add-apt-repository 'ppa:ubuntu-toolchain-r/test' && sudo apt-get update && sudo apt-get install -y ninja-build ninja-build python3-pip python3-setuptools python3-wheel parallel gcovr
    - name: Install pip Dependencies
      run: pip3 install meson
    - name: Download SDE
      run: ./test/download-sde.sh sde
    - name: Configure
      run: ~/.local/bin/meson setup build -Db_coverage=true
    - name: Build
      run: ninja -C build -v
    # SDE is unreasonable slow, so only test the code which isn't
    # already tested on Travis.
    - name: Test
      run: |
        echo /x86/{gfni,avx512dq} | sort -u | xargs parallel sde/sde64 -- ./build/test/run-tests --color always {} :::
    - name: Coverage Report
      run: ninja -C build -v coverage-xml
    - name: CodeCov.io
      uses: codecov/codecov-action@v1
      with:
        file: ./build/meson-logs/coverage.xml

  native-aliases:
    runs-on: ubuntu-latest
    env:
      CC: gcc-10
      CXX: g++-10
      CFLAGS: -DSIMDE_ENABLE_NATIVE_ALIASES -DSIMDE_NATIVE_ALIASES_TESTING -march=native -Wall -Wextra -Werror
      CXXFLAGS: -DSIMDE_ENABLE_NATIVE_ALIASES -DSIMDE_NATIVE_ALIASES_TESTING -march=native -Wall -Wextra -Werror
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Install APT Dependencies
      run: sudo add-apt-repository ppa:ubuntu-toolchain-r/test && sudo apt-get update && sudo apt-get -yq install libxml2-utils ninja-build python3-pip python3-setuptools python3-wheel gcc-10 g++-10 parallel gcovr
    - name: Install pip Dependencies
      run: pip3 install meson
    - name: Convert
      run: ./test/native-aliases.sh
    - name: Configure
      run: ~/.local/bin/meson setup build -Db_coverage=true
    - name: Build
      run: ninja -C build -v
    - name: Test
      run: |
        ./build/test/run-tests --list | grep -oP '^/([^\/]+)/([^\/]+)' | sort -u | xargs parallel ./build/test/run-tests --color always {} :::
    - name: Coverage Report
      run: ninja -C build -v coverage-xml
    - name: CodeCov.io
      uses: codecov/codecov-action@v1
      with:
        file: ./build/meson-logs/coverage.xml

  ubuntu-xenial:
    runs-on: ubuntu-16.04
    env:
      CFLAGS: -mavx2 -Wall -Wextra -Werror
      CXXFLAGS: -mavx2 -Wall -Wextra -Werror
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Install APT Dependencies
      run: sudo add-apt-repository ppa:ubuntu-toolchain-r/test && sudo apt-get update && sudo apt-get -yq install ninja-build parallel
    - name: Configure
      run: mkdir test/build && cd test/build && cmake -G Ninja ..
    - name: Build
      run: ninja -C test/build -v
    - name: Test
      run: |
        ./test/build/run-tests --list | grep -oP '^/([^\/]+)/([^\/]+)' | sort -u | xargs parallel ./test/build/run-tests --color always {} :::
